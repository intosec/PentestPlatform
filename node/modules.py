from __future__ import absolute_import, unicode_literals
from celery import exceptions

from .celery import app
import json


class BaseCeleryTask(app.Task):

    def __init__(self, *args, **kwargs):
        self.max_retries = 3
        self.default_retry_delay = 30 * 1
        # self.autoretry_for = (Exception, )

    def on_failure(self, exc, task_id, args, kwargs, einfo):
        if type(exc) is exceptions.MaxRetriesExceededError:
            raise Exception(exc)
        else:
            self.retry(ex=exc)

    def on_success(self, retval, task_id, args, kwargs):
        print retval


class Job:
    uuid = ''
    target = None
    action = None
    params = None
    result = None

    # def __init__(self):
    #     self.name = name

    def __unicode__(self):
        return self.toJSON()

    def toJSON(self):
        return json.dumps(self, default=lambda o: o.__dict__,
                          sort_keys=True, indent=4)
